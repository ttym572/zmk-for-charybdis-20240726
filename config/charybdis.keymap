#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt { flavor = "tap-preferred"; };

/ {
    tdDel: DEL_BSPACE {
        compatible = "zmk,behavior-tap-dance";
        label = "del_bspace";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp BSPC>, <&kp DEL>;
    };

    combos {
        compatible = "zmk,combos";

        bspc_combo {
            bindings = <&kp BACKSPACE>;
            key-positions = <31 32>;
            timeout-ms = <30>;
        };

        MouseLClick_combo {
            bindings = <&mkp MB1>;
            key-positions = <27 28>;
            timeout-ms = <30>;
        };

        Esc_close_combo {
            bindings = <&mt LA(F4) ESCAPE>;
            key-positions = <13 14>;
            timeout-ms = <30>;
        };

        princ_combo {
            bindings = <&princ>;
            key-positions = <19 20 21>;
            timeout-ms = <30>;
        };

        tab_swapper_combo {
            bindings = <&mt LA(LC(TAB)) TAB>;
            key-positions = <26 27>;
            timeout-ms = <30>;
        };

        small_para_combo {
            bindings = <&small_para>;
            key-positions = <28 31>;
            timeout-ms = <30>;
        };

        mid_brkt_combo {
            bindings = <&mid_brkt>;
            key-positions = <29 30>;
            timeout-ms = <30>;
        };

        del_combo {
            bindings = <&kp DELETE>;
            key-positions = <33 34>;
            timeout-ms = <30>;
        };

        mouse_Rclick_combo {
            bindings = <&mkp MB2>;
            key-positions = <19 20>;
            timeout-ms = <30>;
        };

        quote_combo {
            bindings = <&double_quote>;
            key-positions = <40 43>;
            timeout-ms = <30>;
        };

        r_win_combo {
            bindings = <&kp RIGHT_WIN>;
            key-positions = <45 46>;
            timeout-ms = <30>;
        };

        Bluetooth_layer {
            bindings = <&mo 4>;
            key-positions = <13 22>;
            timeout-ms = <30>;
            layers = <2>;
        };

        enter_combo {
            bindings = <&kp ENTER>;
            key-positions = <33 32>;
            timeout-ms = <30>;
        };

        r_shift_combo {
            bindings = <&sk RIGHT_SHIFT>;
            key-positions = <44 45>;
            timeout-ms = <30>;
        };

        r_ctrl_combo {
            bindings = <&kp RCTRL>;
            key-positions = <43 44>;
            timeout-ms = <30>;
        };

        r_alt_combo {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <44 46>;
            timeout-ms = <30>;
        };

        l_ctrl_combo {
            bindings = <&kp LCTRL>;
            key-positions = <40 39>;
            timeout-ms = <30>;
        };

        l_shift_combo {
            bindings = <&sk LEFT_SHIFT>;
            key-positions = <39 38>;
            timeout-ms = <30>;
        };

        l_win_combo {
            bindings = <&kp LEFT_WIN>;
            key-positions = <37 38>;
            timeout-ms = <30>;
        };

        l_alt_combo {
            bindings = <&kp LEFT_ALT>;
            key-positions = <37 39>;
            timeout-ms = <30>;
        };

        r_ctrlshift_combo {
            bindings = <&kp RC(RIGHT_SHIFT)>;
            key-positions = <43 45>;
            timeout-ms = <30>;
        };

        l_ctrlshift_combo {
            bindings = <&kp LC(LEFT_SHIFT)>;
            key-positions = <40 38>;
            timeout-ms = <30>;
        };

        Fn_layer_combo {
            bindings = <&mo 3>;
            key-positions = <50 51>;
        };
    };

    macros {
        princ: princ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp EXCL &kp AT &kp POUND &kp DLLR &kp PRCNT &kp CARET &kp N1 &kp N2 &kp N3 &kp LS(P) &kp R &kp I &kp N &kp C &kp RET>;
            label = "PRINC";
        };

        small_para: small_para {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LPAR &kp RPAR &kp LEFT>;
            label = "SMALL_PARA";
        };

        mid_brkt: mid_brkt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LBKT &kp RIGHT_BRACKET &kp LEFT>;
            label = "MID_BRKT";
        };

        double_quote: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp DQT &kp DQT &kp LEFT_ARROW>;
            label = "NEW_MACRO";
        };

        big_brkt: big_brkt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
            label = "BIG_BRKT";
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&none  &none  &none  &none  &none      &none    &none  &none  &none      &none       &none          &none
&none  &kp Q  &kp W  &kp E  &kp R      &kp T    &kp Y  &kp U  &kp I      &kp O       &kp P          &none
&none  &kp A  &kp S  &kp D  &kp F      &kp G    &kp H  &kp J  &kp K      &kp L       &kp SEMICOLON  &none
&none  &kp Z  &kp X  &kp C  &kp V      &kp B    &kp N  &kp M  &kp COMMA  &kp PERIOD  &kp SLASH      &none
                     &none  &kp SPACE  &mo 1    &mo 2  &none
                            &none      &none    &none
            >;

            trackball-bindings = <&tmv_coarse>;
        };

        NUM {
            bindings = <
&none          &none           &none                   &none             &none            &none          &none      &none               &none                &none                  &none            &none
&none          &kp SLASH       &kp ASTERISK            &kp MINUS         &kp PLUS         &none          &none      &kp NUMBER_7        &kp NUMBER_8         &kp NUMBER_9           &kp PERCENT      &none
&double_quote  &mkp MB2        &kp ENTER               &kp BACKSPACE     &mkp MB1         &small_para    &mid_brkt  &kp NUMBER_4        &kp N5               &kp NUMBER_6           &kp NUMBER_0     &big_brkt
&none          &mt LWIN TILDE  &mt LEFT_ALT AMPERSAND  &mt LSHIFT CARET  &mt LCTRL EQUAL  &none          &none      &mt LCTRL NUMBER_1  &mt LSHIFT NUMBER_2  &mt LEFT_ALT NUMBER_3  &mt LWIN KP_DOT  &none
                                                       &trans            &trans           &trans         &trans     &mt LA(F4) ESC
                                                                         &none            &none          &none
            >;

            trackball-bindings = <&tmv_fine>;//精准指针
        };

        NAV {
            bindings = <
&none            &none           &none          &none           &none                &none                &none   &none          &none           &none         &none          &none
&none            &kp LC(MINUS)   &kp LC(PG_UP)  &kp LC(TAB)     &kp LC(EQUAL)        &none                &none   &kp BACKSLASH  &kp UNDERSCORE  &kp SQT       &kp LA(LS(D))  &none
&kp C_VOLUME_UP  &kp LEFT_ARROW  &kp UP_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW      &kp C_VOLUME_DOWN    &trans  &mkp MB1       &kp BACKSPACE   &kp ENTER     &kp DELETE     &trans
&none            &kp HOME        &kp PG_UP      &kp PAGE_DOWN   &kp END              &none                &none   &sk LCTRL      &sk LSHIFT      &sk LEFT_ALT  &sk LWIN       &none
                                                &trans          &mt LA(LC(TAB)) TAB  &trans               &trans  &trans
                                                                &none                &none                &none
            >;
        };

        FN {
            bindings = <
&none  &none  &none  &none   &none   &none     &none   &none   &none   &none   &none    &none
&none  &none  &none  &none   &none   &none     &none   &kp F7  &kp F8  &kp F9  &kp F11  &none
&none  &none  &none  &none   &none   &none     &none   &kp F4  &kp F5  &kp F6  &kp F10  &none
&none  &none  &none  &none   &none   &none     &none   &kp F1  &kp F2  &kp F3  &kp F12  &none
                     &trans  &trans  &trans    &trans  &trans
                             &none   &none     &none
            >;
        };

        Bluetooth {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none         &none         &none         &none        &none
&none  &none  &none  &none  &none  &none    &none  &none         &none         &none         &none        &none
&none  &none  &none  &none  &none  &none    &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR   &none
&none  &none  &none  &none  &none  &none    &none  &none         &none         &none         &bootloader  &none
                     &none  &none  &none    &none  &none
                            &none  &none    &none
            >;
        };
    };
};
