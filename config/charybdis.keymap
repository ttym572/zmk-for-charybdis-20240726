#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt { flavor = "tap-preferred"; };

/ {
    tdDel: DEL_BSPACE {
        compatible = "zmk,behavior-tap-dance";
        label = "del_bspace";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp BSPC>, <&kp DEL>;
    };

    combos {
        compatible = "zmk,combos";

        bspc_combo {
            bindings = <&kp BACKSPACE>;
            key-positions = <31 32>;
            timeout-ms = <30>;
        };

        MouseLClick {
            bindings = <&mkp MB1>;
            key-positions = <27 28>;
            timeout-ms = <30>;
        };

        Esc {
            bindings = <&mt LA(F4) ESCAPE>;
            key-positions = <13 14>;
            timeout-ms = <30>;
        };

        princ_combo {
            bindings = <&princ>;
            key-positions = <19 20 21>;
            timeout-ms = <30>;
        };

        XC_to_Tab {
            bindings = <&mt LA(LC(TAB)) TAB>;
            key-positions = <26 27>;
            timeout-ms = <30>;
        };

        small_para_combo {
            bindings = <&small_para>;
            key-positions = <28 31>;
            timeout-ms = <30>;
        };

        mid_brkt_combo {
            bindings = <&mid_brkt>;
            key-positions = <29 30>;
            timeout-ms = <30>;
        };

        del_combo {
            bindings = <&kp DELETE>;
            key-positions = <33 32>;
            timeout-ms = <30>;
        };

        mouse2 {
            bindings = <&mkp MB2>;
            key-positions = <19 20>;
            timeout-ms = <30>;
        };

        quote_combo {
            bindings = <&double_quote>;
            key-positions = <40 43>;
            timeout-ms = <30>;
        };

        win_combo {
            bindings = <&kp LEFT_WIN>;
            key-positions = <45 46>;
            timeout-ms = <30>;
        };

        Bluetooth_layer {
            bindings = <&mo 3>;
            key-positions = <13 22>;
            timeout-ms = <30>;
            layers = <2>;
        };

        enter_combo {
            bindings = <&kp ENTER>;
            key-positions = <33 34>;
            timeout-ms = <30>;
        };

        shift_combo {
            bindings = <&sk LSHIFT>;
            key-positions = <44 45>;
            timeout-ms = <30>;
        };

        ctrl_combo {
            bindings = <&sk LCTRL>;
            key-positions = <43 44>;
            timeout-ms = <30>;
        };

        alt_combo {
            bindings = <&sk LEFT_ALT>;
            key-positions = <21 22>;
            timeout-ms = <30>;
        };
    };

    macros {
        princ: princ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp EXCL &kp AT &kp POUND &kp DLLR &kp PRCNT &kp CARET &kp N1 &kp N2 &kp N3 &kp LS(P) &kp R &kp I &kp N &kp C &kp RET>;
            label = "PRINC";
        };

        small_para: small_para {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LPAR &kp RPAR &kp LEFT>;
            label = "SMALL_PARA";
        };

        mid_brkt: mid_brkt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LBKT &kp RIGHT_BRACKET &kp LEFT>;
            label = "MID_BRKT";
        };

        double_quote: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp DQT &kp DQT &kp LEFT_ARROW>;
            label = "NEW_MACRO";
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&none  &none  &none  &none           &none            &none    &none  &none  &none      &none       &none          &none
&none  &kp Q  &kp W  &kp E           &kp R            &kp T    &kp Y  &kp U  &kp I      &kp O       &kp P          &none
&none  &kp A  &kp S  &kp D           &kp F            &kp G    &kp H  &kp J  &kp K      &kp L       &kp SEMICOLON  &none
&none  &kp Z  &kp X  &kp C           &kp V            &kp B    &kp N  &kp M  &kp COMMA  &kp PERIOD  &kp SLASH      &none
                     &sk LEFT_SHIFT  &mt LCTRL SPACE  &mo 1    &mo 2  &none
                                     &none            &none    &none
            >;

            trackball-bindings = <&tmv_coarse>;
        };

        NUM {
            bindings = <
&trans  &trans     &trans        &trans          &trans        &trans    &trans   &trans           &trans           &trans           &trans             &trans
&trans  &kp SLASH  &kp ASTERISK  &kp MINUS       &kp PLUS      &trans    &trans   &mt F7 NUMBER_7  &mt F8 NUMBER_8  &mt F9 NUMBER_9  &mt F11 PERCENT    &trans
&trans  &kp N0     &kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3  &trans    &kp DOT  &mt F4 NUMBER_4  &mt F5 NUMBER_5  &mt F6 NUMBER_6  &mt F10 N0         &trans
&trans  &kp SQT    &kp TILDE     &kp UNDERSCORE  &kp EQUAL     &trans    &trans   &mt F1 NUMBER_1  &mt F2 NUMBER_2  &mt F3 NUMBER_3  &mt F12 BACKSLASH  &trans
                                 &trans          &trans        &trans    &trans   &trans
                                                 &trans        &trans    &trans
            >;

            trackball-bindings = <&tmv_fine>;//精准指针
        };

        NAV {
            bindings = <
&trans  &trans          &trans        &trans          &trans           &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans        &trans          &trans           &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp HOME        &kp END       &kp PAGE_UP     &kp PAGE_DOWN    &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                      &trans          &trans           &trans    &trans  &trans
                                                      &trans           &trans    &trans
            >;
        };

        Bluetooth {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none         &none         &none         &none        &none
&none  &none  &none  &none  &none  &none    &none  &none         &none         &none         &none        &none
&none  &none  &none  &none  &none  &none    &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR   &kp A
&none  &none  &none  &none  &none  &none    &none  &none         &none         &none         &bootloader  &none
                     &none  &none  &none    &none  &none
                            &none  &none    &none
            >;
        };
    };
};
